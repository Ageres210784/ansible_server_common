---
- name: Common | SSH keys | Get all keys with URL format
  command: "curl {{ item }}"
  register: url_keys_temp
  with_items: "{{ user.value.ssh_keys }}"
  when:
    - user.value.ssh_keys is defined
    - user.value.state != 'absent'
    - item.startswith('https')
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Set default url keys fact
  set_fact:
    urlkeys: []
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Set all url keys into one fact
  set_fact:
    urlkeys: "{{ urlkeys + [ item.stdout | default('') ] }}"
  with_items: "{{ url_keys_temp.results }}"
  when: user.value.ssh_keys is defined and user.value.state != 'absent'
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Set default non-url keys fact
  set_fact:
    linekeys: []
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Set all non-url keys into one fact
  set_fact:
    linekeys: "{{ linekeys + [ item | default('') ] }}"
  with_items: "{{ user.value.ssh_keys }}"
  when:
    - user.value.ssh_keys is defined
    - user.value.state != 'absent'
    - not item.startswith('https')
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Set fact with all user keys to set them exclusively
  set_fact:
    user_keys: "{{ linekeys | union(urlkeys) | join('\n') }}"
  when: user.value.ssh_keys is defined and user.value.state != 'absent'
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys | Get user home directory
  shell:
    cmd: |
      getent passwd "{{ user.value.name }}" | cut -d':' -f6
  register: passwd_user
  changed_when: false
  tags:
    - users
    - ssh_keys

- name: Ensure user keys
  block:
    - name: Common | SSH keys | Remove chattr from authorized keys file
      become: yes
      become_user: root
      file:
        path: "{{ passwd_user.stdout }}/.ssh/authorized_keys"
        attr: -i
      when: user.value.ssh_keys is defined and user.value.state != 'absent'
      register: auth_keyfile
      # Basically we could set changed_when to this way but we unset it and
      # set it back, so these operations will be non-idempotent anyway in such
      # case
      #changed_when: "'i' in auth_keyfile.diff.before.attributes"
      changed_when: false
      tags:
        - users
        - ssh_keys

    - name: Common | SSH keys | Set {{ user.key }} keys
      authorized_key:
        user: "{{ user.value.name }}"
        key: "{{ user_keys }}"
        exclusive: yes
      register: auth_keyfile
      when: user.value.ssh_keys is defined and user.value.state != 'absent'
      tags:
        - users
        - ssh_keys
  always:
    - name: Common | SSH keys | Set chattr to authorized keys file
      become: yes
      become_user: root
      file:
        path: "{{ passwd_user.stdout }}/.ssh/authorized_keys"
        attr: +i
      when: user.value.ssh_keys is defined and user.value.state != 'absent'
      changed_when: false
      tags:
        - users
        - ssh_keys
